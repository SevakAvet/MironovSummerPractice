% Generated by GrindEQ Word-to-LaTeX 2007
% LaTeX/AMS-LaTeX

\documentclass{article}
\usepackage{csit-2014}

\begin{document}

%%% remove comment delimiter ('%') and select language if required
%\selectlanguage{spanish}

\textbf{Completeness conditions of systems of Moore automata}

Donis, A. A.\textbf{\textit{}}

\textit{donis\_a2@mail.ru}

\textit{Freelance author, Burgas, Bulgaria}

The article describes sufficient completeness conditions for the class of Moore automata, compositions with feedback on this class and the behavior realization. It is shown how to implement a delay by automata from the set satisfying sufficient conditions for completeness. The ideas of these constructions demonstrate how from a set of automata with long cycles of transients can be realized a delay with short cycle of transient. It is shown that there are large finite complete sets of automata, for which any proper subsets are not complete.

\textbf{Keywords:} finite automata, composition of automata, completeness problem.

\textbf{Introduction}

Compositions of complex automata from other more simple automata play an important role in problems of synthesis of discrete information transformers. A subset of automata haves the completeness property, if every automaton may be realized by composition of any automata from the given subset. The completeness problem for automata is the problem of whether a set of automata is complete or not. In general, it was found [1] that the problem of recognition of completeness for any given finite subset of automata is algorithmically unsolvable. Due to the algorithmic unsolvability of the completeness problem in general case there remains a problem of finding effectively verifiable properties of complete sets of automata for important classes of operations and realizations. For such class of compositions the most frequently are used the feedback of Moore automata and functional units without memory (switching circuits). It was found [2, 3] the easily verifiable properties of the completeness of systems consisting of Moore automata and arbitrary switching circuits for so-called isomorphic realization (implementation up to the device memory structure). In [4] and later in [5] were formulated some verifiable sufficient conditions for the recognition of the completeness of systems consisting of Moore automata and arbitrary switching circuits for homomorphic realization (implementation up to the device behavior rather than to device memory structure). However, as it turned out, these conditions, being sufficient, are not necessary.

In this article are proposed some weaker sufficient conditions, but similar to those found in [4], for completeness in the same class of automata, compositions and realizations. Was found that there are arbitrarily large complete subsets of automata, no properly subset of which are not complete. The author expects that these conditions are also necessary, but it is not a proof of this disposes. There is also no evidence of effective verification of these conditions for finite subsets of Moore automata. Basic concepts and terminology used in this article go back to work mentioned above, as well as to [7-9].

\begin{enumerate}
\item  \textbf{Finite automata}
\end{enumerate}

A finite Mealy automaton A is a system of objects (S(A),X(A),Y(A),T(A),M(A)), where S(A), X(A) and Y(A) are finite sets, known, respectively, as the set of states, the input and output sets (of signals), T(A) is the transition function, which maps the set S(A)$\times$X(A) into S(A), M(A) is the output function, which maps S(A)$\times$X(A) into Y(A). If the output function M(A) maps S(A) into Y(A) (i.e. is independent of the input set), the finite automaton is known as a Moore automaton, and its output function as a mark function and M(A)(s) is called the mark of the state s. Any Moore automaton is also a Mealy automaton. An automaton is said to be an autonomous automaton, if the cardinality of its input set is equal to one. If the cardinality of the set of states is equal to one, then the automaton is called an automaton without memory or switching units.

An important characteristic of a finite automaton as a transformer is its behavior, which here is defined by extending the functions T(A) and M(A) to the set S(A)$\times$X(A)* as follows:

T(A)(s,e)=s, T(A)(s,px)=T(A)(T(A)(s,p),x), M(A)(s,e)=e, M(A)(s,px)=M(A)(T(A)(s,p),x),

where s in S(A), x in X(a),  p in X(A)*, X(A)* is the set of all strings (or words) over X(A), including the empty word e, px denotes the concatenation the word p and the letter x. The extension of the functions T(A) and M(A) to arbitrary s and p describes, respectively, the state into which the automaton passes from the state s under the effect of the input word p, and the output letter which is produced by the automaton at the moment of entry of the last letter of the input word p.

Let T*(A) and M*(A) are the extensions of the functions T(A) and M(A), which map S(A)$\times$X(A)* into S(A)* and S(A)$\times$X(A)* into Y(A)*, respectively, as follows:

T*(A)(s,e)=e, T*(A)(s,px)=T*(A)(s,p)T(A)(s,px), M*(A)(s,e)=e, M*(A)(s,px)=M*(A)(s,p)M(A)(s,px)). \eqref{GrindEQ__1_}

The functions T*(A)(s,p) and M*(A)(s,p) describe the sequence of states passed by the automaton under the influence of the input word p, and also the output word put out by the automaton in those states under the influence of the next signal of the input word p.

An automaton A with a designated initial state s0(A) is known as initialized and is denoted by A(s0). The behavior of an initialized finite automaton A(s0) is defined with \eqref{GrindEQ__1_} where s=s0(A).  The function M*(A(s0)), which maps X(A)* into Y(A)*, is called finitely-determined function (FD-function), realizable by the initialized finite automaton A(s0). Regarding behavior of Moore and Mealy automata, Moore automata will be equivalent to Mealy automata, if in a Moore automaton instead of function M*(s,px), defined in \eqref{GrindEQ__1_}, is taken function M*(s,px):S(A)$\times$X(A)* of the form:

M*(A)(s,e)=e, M*(A)(s,px)=M*(A)(s,p)M(A)(T(A)(s,px)).

The automaton A=(S(A),X(A),Y(A),T(A),M(A)) is known as a homomorphic (over set of states) image of the automaton B=(S(B),X(B),Y(B),T(B),M(B)), if the equals X(B)=X(A) and Y(B)=Y(A) are performed and there exist a mapping H, which maps S(B) into S(A), so that the conditions  T(A)(H(s),x)=H(T(B)(s,x)),  M(A)(H(s),x)=M(B)(s,x) are satisfied for all s in S(B) and x in X(B). If the mapping H is one-to-one, the automata A and B is known as isomorphic (over set of states). It is known that the initialized isomorphic (homomorphic) automata have the same behavior (realized the same FD-function).

If for automata A and B the following conditions S(B)$<$S(A), X(B)$<$X(A), Y(B)$<$Y(A),  T(B)$<$\includegraphics[bb=0mm 0mm 208mm 296mm, width=2.9mm, height=5.4mm, viewport=3mm 4mm 205mm 292mm]{image2}(A), M(B)$<$M(A) (where symbol $<$ denotes the inclusion of sets) are satisfied and belonging T(B)(s,x) in S(B), M(B)(s,x) in Y(B) holds for all s in S(B) and x in X(B) then the automaton B is known as the subautomaton of the automaton A. If an automaton A is initialized, s0(A) is its initial state and X$<$X(A), then there is an only one initialized  subautomaton A`(s0,X), for which follows

X(A`)=X, S(A`)=\{T(A)(s0(A),p):p in X*\}, Y(A`)=\{M(A)(s0(A),p):p in X*\},

T(A`)(s,x)=T(A)(s,x), M(A`)(s,x)=M(A)(s,x),

where s in S(A`), x in X,  p in X*. It is called a subautomaton, generated by the state s0(A) and the input set X.

\begin{enumerate}
\item  \textbf{Composition of automata}
\end{enumerate}

Let identified a two nonempty finite sets X, Y, a set of k Moore automata:

A\eqref{GrindEQ__1_}=(S(1),X\eqref{GrindEQ__1_},Y\eqref{GrindEQ__1_},T\eqref{GrindEQ__1_},M\eqref{GrindEQ__1_}),\dots , A(k)=(S(k),X(k),Y(k),T(k),M(k))

and two switching units (automata without memory) F and G , called the feedback unit and the output unit for this set of automata, which map Cartesian products X$\times$Y\eqref{GrindEQ__1_}$\times$\dots $\times$Y(k) into X\eqref{GrindEQ__1_}$\times$\dots $\times$X(k) and Y\eqref{GrindEQ__1_}$\times$\dots  $\times$Y(k) into Y respectively.

A Moore automaton A=(S(A),X(A),Y(A),T(A),M(A)) is called a composition of the set of automata A\eqref{GrindEQ__1_},\dots ,A(k) with the units F and G, if the following conditions are performed:

S(A)=S\eqref{GrindEQ__1_}$\times$\dots $\times$S(k), X(A)=X, Y(A)=Y,

T(A)((s(1),\dots ,s(k)),x)=

(T(1)(s(1),F(x,M(1)(s(1)),\dots ,M(k)(s(k)))[1],\dots ,T(k)(s(k),F(x,M(1)(s(1)),\dots ,M(k)(s(k)))[k]),

M(A)((s(1),\dots ,s(k)))=G(M(1)(s(1)),\dots ,M(k)(s(k))),

where s\eqref{GrindEQ__1_} in S\eqref{GrindEQ__1_},\dots , s(k) in S(k), x in X and r[i] denotes the i-th component r(i) of k-tuple r=(r(1),\dots ,r(k)), 0$<$i$<$k+1.

These operations in the set of automata reflect a more engineering, as in [2-4], than functional, as in [6, 8], approach to the modeling of real methods for constructing discrete information processing devices. It is easy to verify that if a Moore automaton is the composition of Moore automata with feedback and output units, and in turn, each of components of the composition is a composition of some other Moore automata with other feedback and output units, then the first Moore automaton is a composition of these other Moore automata with some suitable feedback and output units. In this sense, the class of Moore automata is closed for compositions with suitable feedback and output units.

Attempt a similar definition for a composition of Mealy automata and feedback units leads in general case to an unsolvable problem of recursion. However, use of a composition of Moore automata with suitable feedback unit F and the output unit G, which performs the mapping of a set X\includegraphics[bb=0mm 0mm 208mm 296mm, width=3.3mm, height=5.4mm, viewport=3mm 4mm 205mm 292mm]{image4}Y\eqref{GrindEQ__1_}\includegraphics[bb=0mm 0mm 208mm 296mm, width=3.3mm, height=5.4mm, viewport=3mm 4mm 205mm 292mm]{image6}\dots \includegraphics[bb=0mm 0mm 208mm 296mm, width=3.3mm, height=5.4mm, viewport=3mm 4mm 205mm 292mm]{image8}Y(k) into Y, allows defining a Mealy automaton. But use of such composition is possible only at the final stage of a multi-stage construction of a Mealy automaton from Moore automata.

Everywhere below, until otherwise stated, are considered Moore automata. For any word p let Len(p), p[i] and p[1:n] denote respectively the length of p, the i-th character of p and the segment of the word p from i-th to j-th characters.

\begin{enumerate}
\item  \textbf{Theorem (Sufficient conditions of completeness)}
\end{enumerate}

A Moore automaton set is complete if it contains for some number k a sample of automata:

A\eqref{GrindEQ__1_}=(S(1),X\eqref{GrindEQ__1_},Y\eqref{GrindEQ__1_},T\eqref{GrindEQ__1_},M\eqref{GrindEQ__1_}),...,A(k)=(S(k),X(k),Y(k),T(k),M(k)),

for which there are:

\begin{enumerate}
\item  a number n$>$1,

\item  states s0\eqref{GrindEQ__1_},\dots ,s0(k) called separated states in automaton from the sample, s0\eqref{GrindEQ__1_} in S\eqref{GrindEQ__1_},\dots , s0(k) in S(k),

\item  input words p1\eqref{GrindEQ__1_},...,p1(k), p2\eqref{GrindEQ__1_},...,p2(k) of length n called separating input words in automaton from the sample, p1\eqref{GrindEQ__1_},p2\eqref{GrindEQ__1_} in X\eqref{GrindEQ__1_}*,...,p1(k),p2(k) in X(k)*, Len(p1(1))=Len(p2(1))=\dots  Len(p1(k))=Len(p2(k))=n,
\end{enumerate}

for which follows the conditions:

\begin{enumerate}
\item  each automaton from the sample moves (returns) in its separated states from the separated states under the influence of their separating input words, i.e.:
\end{enumerate}

T\eqref{GrindEQ__1_}(s0(1),p1\eqref{GrindEQ__1_})=s0\eqref{GrindEQ__1_},\dots ,T(k)(s0(k),p1(k))=s0(k), T\eqref{GrindEQ__1_}(s0(1),p2\eqref{GrindEQ__1_})=s0\eqref{GrindEQ__1_},\dots ,T(k)(s0(k),p2(k))=s0(k), \eqref{GrindEQ__2_}

\begin{enumerate}
\item  differ the marks of the states in which the automaton A\eqref{GrindEQ__1_} moves from the separated state under the influence of the first letters (input signals) in their separating input words, i.e.:
\end{enumerate}

M\eqref{GrindEQ__1_}(T(1)(s0(1),p1\eqref{GrindEQ__1_}[1]))\#M\eqref{GrindEQ__1_}(T(1)(s0(1),p2\eqref{GrindEQ__1_}[1])), \eqref{GrindEQ__3_}

\begin{enumerate}
\item  if pairwise coincide marks for all the states of automata from the sample, in which they move from the separated states under the influence of the initial segments of equal length separating input words, then the input signals coincide pairwise in all separating input words, immediately following the initial segments of these sequences, i.e.:
\end{enumerate}

for all j=2,\dots ,n-1 the equations:

M\eqref{GrindEQ__1_}(T(1)(s0(1),p1\eqref{GrindEQ__1_}[1:j])=M\eqref{GrindEQ__1_}(T(1)(s0(1),p2\eqref{GrindEQ__1_}[1:j]),\dots ,

M(k)(T(k)(s0(k),p1(k)[1:j])=M(k)(T(k)(s0(k),p2(k)[1:j]) \eqref{GrindEQ__4_}

implies the equations:

p1\eqref{GrindEQ__1_}[j+1]=p2\eqref{GrindEQ__1_}[j+1],\dots ,p1(k)[j+1]=p2(k)[j+1]. \eqref{GrindEQ__5_}

\begin{enumerate}
\item  \textbf{Example of a complete system of automata}
\end{enumerate}

A proof of the sufficiency of these conditions in the general case is quite cumbersome. In this regard, described the construction an automaton that realizes the behavior of the Moore automaton, known as a delay, from simple Moore automata set, satisfying the sufficient conditions. Then the completeness of this set of automata follows by virtue of the well-known fact that with the help of delays and suitable feedback and outputs units can be realized an arbitrary automaton.

This set consist of three automata

\{A\eqref{GrindEQ__1_},A\eqref{GrindEQ__2_},A\eqref{GrindEQ__3_}\},  \eqref{GrindEQ__6_}

where A(i)=(S(i),X(i),Y(i),T(i),M(i)), S(i)=\{0,1,2,3,4,5,6,7\}, X(i)=Y(i)=\{0,1\}), i=1,2,3, and the same transition function T\eqref{GrindEQ__1_}=T\eqref{GrindEQ__2_}=T\eqref{GrindEQ__3_} and different mark functions M\eqref{GrindEQ__1_}, M\eqref{GrindEQ__2_}, M\eqref{GrindEQ__3_} given in the table 1.

Table 1. The transition and mark functions of the automata A \eqref{GrindEQ__1_}, A \eqref{GrindEQ__2_}, A \eqref{GrindEQ__3_}

\begin{tabular}{|p{0.3in}|p{0.3in}|p{0.3in}|p{0.3in}|p{0.3in}|p{0.3in}|} \hline
Cur-rent state & \multicolumn{2}{|p{0.5in}|}{New statefor Input} & \multicolumn{3}{|p{1.0in}|}{Output: the mark function of} \\ \hline
 & 0 & 1 & M\eqref{GrindEQ__1_} & M\eqref{GrindEQ__2_} & M\eqref{GrindEQ__3_} \\ \hline
0 & 2 & 1 & 0 & 0 & 0 \\ \hline
1 & 7 & 3 & 1 & 0 & 0 \\ \hline
2 & 4 & 7 & 0 & 0 & 0 \\ \hline
3 & 7 & 5 & 0 & 1 & 0 \\ \hline
4 & 6 & 7 & 0 & 0 & 0 \\ \hline
5 & 7 & 0 & 0 & 0 & 1 \\ \hline
6 & 0 & 7 & 0 & 0 & 0 \\ \hline
7 & 7 & 7 & 0 & 0 & 0 \\ \hline
\end{tabular}

Here a new state T(i)(s,x) defined by the intersection of the row with the current state s in S(i) and the column with the input signal x in X(i), i=1,\dots ,3. The output signal M(i)(s) in Y(i), marked the current state s in S(i), is indicated in the appropriate box for the current state and the mark function M(i), i=1,\dots ,3.

Defined set \eqref{GrindEQ__6_} of automata, considered as a sample for k=3, satisfies sufficient conditions for completeness. Indeed, if will defined n=4, s0(i)=0 as the separated state and p1(i)=0000, p2(i)=1111 as the separating input sequences for each automaton A(i) from the set \eqref{GrindEQ__6_}, then

T(i)(s0(i),p1(i))=T(i)(0,0000)=0, T(i)(s0(i),p2(i))=T(i)(0,1111)=0), i=1,2,3,

M\eqref{GrindEQ__1_}(T(1)(s0(1),p1\eqref{GrindEQ__1_}[1]))=M\eqref{GrindEQ__1_}(T(1)(0,0000[1]))=0\#1=M\eqref{GrindEQ__1_}(T(1)(s0(1),p2\eqref{GrindEQ__1_}[1]))=M\eqref{GrindEQ__1_}(T(1)(0,1111[1])), i.e. the conditions \eqref{GrindEQ__2_} and \eqref{GrindEQ__3_} are satisfied for the separated state and the separating input sequences.

Further, for each j$>$1 and j$<$n (and since n=4, then j=2, 3), there exists a value i, exactly equal to j, that:

M\eqref{GrindEQ__2_}T\eqref{GrindEQ__2_}(s0(2),p1\eqref{GrindEQ__2_}[1:2]))=0\#1=M\eqref{GrindEQ__2_}T\eqref{GrindEQ__2_}(s0(2),p2\eqref{GrindEQ__2_}[1:2])),

M\eqref{GrindEQ__3_}T\eqref{GrindEQ__3_}(s0(3),p1\eqref{GrindEQ__3_}[1:3]))=0\#1=M\eqref{GrindEQ__3_}T\eqref{GrindEQ__3_}(s0(3),p2\eqref{GrindEQ__3_}[1:3])),

i.e. for all j (j$>$1 and j$<$n), the condition \eqref{GrindEQ__4_} does not hold for all i=1,2,3, by virtue of which is not required to will be satisfied the condition \eqref{GrindEQ__5_}.

\textbf{5. Realization of a delay}

A Moore automaton D, the objects (S(D),X(D),Y(D),T(D),M(D)) of which defined as follows:

S(D)=X(D)=Y(D)=\{0,1\}, T(D)(s,x)=x, M(s)=s,

where s in S(D), x in X(D) is known as delay.

The delay D will be realized by the automaton D0 that is a subautomaton of a composition:

\begin{enumerate}
\item  a sample of 15=3\includegraphics[bb=0mm 0mm 208mm 296mm, width=3.3mm, height=5.4mm, viewport=3mm 4mm 205mm 292mm]{image10}5 automata, defined in \eqref{GrindEQ__6_}
\end{enumerate}

A\eqref{GrindEQ__1_},A\eqref{GrindEQ__2_},A\eqref{GrindEQ__3_},A\eqref{GrindEQ__4_},A\eqref{GrindEQ__5_},A\eqref{GrindEQ__6_},A\eqref{GrindEQ__7_},A\eqref{GrindEQ__8_},A\eqref{GrindEQ__9_},A\eqref{GrindEQ__10_},A\eqref{GrindEQ__11_},A\eqref{GrindEQ__12_},A\eqref{GrindEQ__13_},A\eqref{GrindEQ__14_},A\eqref{GrindEQ__15_}, \eqref{GrindEQ__7_}

where:

A\eqref{GrindEQ__4_}=A\eqref{GrindEQ__7_}=A\eqref{GrindEQ__10_}=A\eqref{GrindEQ__13_}=A\eqref{GrindEQ__1_}, A\eqref{GrindEQ__5_}=A\eqref{GrindEQ__8_}=A\eqref{GrindEQ__11_}=A\eqref{GrindEQ__14_}=A\eqref{GrindEQ__2_}, A\eqref{GrindEQ__6_}=A\eqref{GrindEQ__9_}=A\eqref{GrindEQ__12_}=A\eqref{GrindEQ__15_}=A\eqref{GrindEQ__3_},

which are initialized as follows:

s0\eqref{GrindEQ__1_}=s0\eqref{GrindEQ__2_}=s0\eqref{GrindEQ__3_}=0, s0\eqref{GrindEQ__4_}=s0\eqref{GrindEQ__5_}=s0\eqref{GrindEQ__6_}=6, s0\eqref{GrindEQ__7_}=s0\eqref{GrindEQ__8_}=s0\eqref{GrindEQ__9_}=4, s0\eqref{GrindEQ__10_}=s0\eqref{GrindEQ__11_}=s0\eqref{GrindEQ__12_}=2,

 s0\eqref{GrindEQ__13_}=s0\eqref{GrindEQ__14_}=s0\eqref{GrindEQ__15_}=0;

\begin{enumerate}
\item  a feedback unit F, which maps X(D)$\times$Y\eqref{GrindEQ__1_}$\times$Y\eqref{GrindEQ__2_}$\times$Y\eqref{GrindEQ__3_}$\times$\dots $\times$Y\eqref{GrindEQ__1_}$\times$Y\eqref{GrindEQ__2_}$\times$Y\eqref{GrindEQ__3_}
\end{enumerate}

into X\eqref{GrindEQ__1_}$\times$X\eqref{GrindEQ__2_}$\times$X\eqref{GrindEQ__3_}$\times$\dots $\times$X\eqref{GrindEQ__1_}$\times$X\eqref{GrindEQ__2_}$\times$X\eqref{GrindEQ__3_},

\begin{enumerate}
\item  an output unit G, which maps Y\eqref{GrindEQ__1_}$\times$Y\eqref{GrindEQ__2_}$\times$Y\eqref{GrindEQ__3_}$\times$\dots $\times$Y\eqref{GrindEQ__1_}$\times$Y\eqref{GrindEQ__2_}$\times$Y\eqref{GrindEQ__3_} into Y(D),
\end{enumerate}

as it will be defined below.

Let the sets U, V, W, X and Y are given by:

U=\{(0,0,0),(0,0,1)\}, V=\{(0,0,0),(0,1,0)\}, W=\{(0,0,0),(1,0,0)\},

X=X\eqref{GrindEQ__1_}$\times$X\eqref{GrindEQ__2_}$\times$X\eqref{GrindEQ__3_}$\times$\dots $\times$X\eqref{GrindEQ__1_}$\times$X\eqref{GrindEQ__2_}$\times$X\eqref{GrindEQ__3_}, Y=Y\eqref{GrindEQ__1_}$\times$Y\eqref{GrindEQ__2_}$\times$Y\eqref{GrindEQ__3_}$\times$\dots $\times$Y\eqref{GrindEQ__1_}$\times$Y\eqref{GrindEQ__2_}$\times$Y\eqref{GrindEQ__3_},

and the mapping Q map \{(0,0,0), (1,0,0), (0,1,0), (0,0,1)\} into \{(0,0,0),(1,1,1)\} are defined as:

Q(x1,x2,x3)=(max(x1,x2,x3),max(x1,x2,x3),max(x1,x2,x3)),

where max(x1,x2,x3) denotes the largest value of x1,x2,x3 and x1,x2,x3 in \{0,1\}.

Then the mapping F which maps X(D)\includegraphics[bb=0mm 0mm 208mm 296mm, width=3.3mm, height=5.4mm, viewport=3mm 4mm 205mm 292mm]{image12}Y into X is defined in the table 2.

Table 2. Mapping, realized feedback unit F

\begin{tabular}{|p{0.2in}|p{1.5in}|p{1.8in}|} \hline
X(D) & Y & X \\ \hline
x & 0,0,0,u1,u2,u3,v1,v2,v3,w1,w2,w3,0,0,0 & x,x,x,Q(u1,u2,u3),Q(v1,v2,v3),Q(w1,w2,w3),1,1,1 \\ \hline
x & w1,w2,w3,0,0,0,u1,u2,u3,v1,v2,v3,1,0,0 & Q(w1,w2,w3),x,x,x,Q(u1,u2,u3),Q(v1,v2,v3),1,1,1 \\ \hline
x & v1,v2,v3,w1,w2,w3,0,0,0,u1,u2,u3,0,1,0 & Q(v1,v2,v3),Q(w1,w2,w3),x,x,x,Q(u1,u2,u3),1,1,1 \\ \hline
x & u1,u2,u3,v1,v2,v3,w1,w2,w3,0,0,0,0,0,1 & Q(u1,u2,u3),Q(v1,v2,v3),Q(w1,w2,w3),x,x,x,1,1,1 \\ \hline
\end{tabular}

Here, in each row of the first two columns variables x in X(D), (u1,u2,u3) in U, (v1,v2,v3) in V, (w1,w2,w3) in W takes the values $?$$?$in the sets X(D), U, V, W, regardless of their values $?$$?$in other rows. However, the values $?$$?$of these variables in the last column coincide with their values $?$$?$in the first column of the corresponding row. Thus, each row of the table with the abbreviated description replaces 16 (=\textbar X(D)\textbar $\times$\textbar U\textbar $\times$\textbar V\textbar $\times$\textbar W\textbar , where \textbar \textbar  denotes the cardinality of the set) rows full description. The values in the last column of the table may be arbitrary for values, distinguished from the same, defined in four rows of the first two columns of the table.

The mapping G which maps Y into Y(D) is defined in the table. 3.

Table 3. Mapping, realized output unit G

\begin{tabular}{|p{1.5in}|p{0.7in}|} \hline
Y & Y(D) \\ \hline
0,0,0,u1,u2,u3,v1,v2,v3,w1,w2,w3,0,0,0 & max(w1,w2,w3) \\ \hline
w1,w2,w3,0,0,0,u1,u2,u3,v1,v2,v3,1,0,0 & max(w1,w2,w3) \\ \hline
v1,v2,v3,w1,w2,w3,0,0,0,u1,u2,u3,0,1,0 & max(w1,w2,w3) \\ \hline
u1,u2,u3,v1,v2,v3,w1,w2,w3,0,0,0,0,0,1 & max(w1,w2,w3) \\ \hline
\end{tabular}

Here, in each row of the first two columns (u1,u2,u3) in U, (v1,v2,v3) in V, (w1,w2,w3) in W takes the values $?$$?$in the sets U, V, W, regardless of their values $?$$?$in other rows. However, values of variables in max(w1,w2,w3) in the last column coincide with the values of variables w1,w2,w3 $?$$?$in the first column. Thus, each row of the table with the abbreviated description replaces 8=\textbar U\textbar $\times$\textbar V\textbar $\times$\textbar W\textbar  rows full description. The values in last column of the table may be arbitrary for values, distinguished from the same, defined in four rows of the first column of the table.

The  automaton D0 with objects (S(D0),X(D0),Y(D0),T(D0),M(D0)), realizing the initial delay D with the initial state s0(D)=0, is defined as the initial subautomaton, generated by its initial state s0(D0) and the set X(D), of the automaton, which is the composition of the sample \eqref{GrindEQ__7_} of the automata, installed in the initial state (0,0,0,6,6,6,4,4,4,2,2,2,0,0,0), and the feedback unit F and the output unit G, described above, i.e.

X(D0)=X(D), Y(D0)=Y(D),

T(D0)((s(1),s\eqref{GrindEQ__2_},s\eqref{GrindEQ__3_},s\eqref{GrindEQ__4_},\dots ,s\eqref{GrindEQ__13_},s\eqref{GrindEQ__14_},s\eqref{GrindEQ__15_}),x)=

(T(1)(s(1),F(x,M(1)(s(1)),M\eqref{GrindEQ__2_}(s(2)),M\eqref{GrindEQ__3_}(s(3)),\dots ,M\eqref{GrindEQ__1_}(s(13)),M\eqref{GrindEQ__2_}(s(14)),M\eqref{GrindEQ__3_}(s(15))[1]

,T\eqref{GrindEQ__2_}(s(2),F(x,M(1)(s(1)),M\eqref{GrindEQ__2_}(s(2)),M\eqref{GrindEQ__3_}(s(3)),\dots ,M\eqref{GrindEQ__1_}(s(13)),M\eqref{GrindEQ__2_}(s(14)),M\eqref{GrindEQ__3_}(s(15))[2]

,T\eqref{GrindEQ__3_}(s(3),F(x,M(1)(s(1)),M\eqref{GrindEQ__2_}(s(2)),M\eqref{GrindEQ__3_}(s(3)),\dots ,M\eqref{GrindEQ__1_}(s(13)),M\eqref{GrindEQ__2_}(s(14)),M\eqref{GrindEQ__3_}(s(15))[3]

,\dots

,T\eqref{GrindEQ__1_}(s(13),F(x,M(1)(s(1)),M\eqref{GrindEQ__2_}(s(2)),M\eqref{GrindEQ__3_}(s(3)),\dots ,M\eqref{GrindEQ__1_}(s(13)),M\eqref{GrindEQ__2_}(s(14)),M\eqref{GrindEQ__3_}(s(15))[13],

,T\eqref{GrindEQ__2_}(s(14),F(x,M(1)(s(1)),M\eqref{GrindEQ__2_}(s(2)),M\eqref{GrindEQ__3_}(s(3)),\dots ,M\eqref{GrindEQ__1_}(s(13)),M\eqref{GrindEQ__2_}(s(14)),M\eqref{GrindEQ__3_}(s(15))[14],

,T\eqref{GrindEQ__3_}(s(15),F(x,M(1)(s(1)),M\eqref{GrindEQ__2_}(s(2)),M\eqref{GrindEQ__3_}(s(3)),\dots ,M\eqref{GrindEQ__1_}(s(13)),M\eqref{GrindEQ__2_}(s(14)),M\eqref{GrindEQ__3_}(s(15))[15]),

M(D0)((s(1),s\eqref{GrindEQ__2_},s\eqref{GrindEQ__3_},\dots ,s\eqref{GrindEQ__13_},s\eqref{GrindEQ__14_},s\eqref{GrindEQ__15_})=

G(M(1)(s(1)),M\eqref{GrindEQ__2_}(s(2)),M\eqref{GrindEQ__3_}(s(3)),\dots ,M\eqref{GrindEQ__1_}(s(13)),M\eqref{GrindEQ__2_}(s(14)),M\eqref{GrindEQ__3_}(s(15))),

s0(D0)=(0,0,0,6,6,6,4,4,4,2,2,2,0,0,0),

where (s(1),s\eqref{GrindEQ__2_},s\eqref{GrindEQ__3_},s\eqref{GrindEQ__4_},... ,s\eqref{GrindEQ__13_},s\eqref{GrindEQ__14_},s\eqref{GrindEQ__15_}) in S\eqref{GrindEQ__1_}$\times$S\eqref{GrindEQ__2_}$\times$S\eqref{GrindEQ__3_}$\times$\dots $\times$S\eqref{GrindEQ__1_}$\times$S\eqref{GrindEQ__2_}$\times$S\eqref{GrindEQ__3_} and x in X(D),

S(D0)=\{T(D0)((0,0,0,6,6,6,4,4,4,2,2,2,0,0,0),p):p in X(D)*\}.

By the definition of the automata from sample \eqref{GrindEQ__7_}, the feedback and output units, the transition T(D0) and mark M(D0) functions are determined in accordance with the table 4.

Table 4. The transition T(D0) and mark M(D0) functions of the automaton D0

\begin{tabular}{|p{1.0in}|p{1.1in}|p{1.1in}|p{0.2in}|} \hline
\newline Current states & \multicolumn{2}{|p{2.1in}|}{New state for Input} & Out-puts \\ \hline
 & 0 & 1 &  \\ \hline
0,0,0,6,6,6,4,4,4,2,2,2,0,0,0 & 2,2,2,0,0,0,6,6,6,4,4,4,1,1,1 & 1,1,1,0,0,0,6,6,6,4,4,4,1,1,1 & 0 \\ \hline
2,2,2,0,0,0,6,6,6,4,4,4,1,1,1 & 4,4,4,2,2,2,0,0,0,6,6,6,3,3,3 & 4,4,4,1,1,1,0,0,0,6,6,6,3,3,3 & 0 \\ \hline
4,4,4,2,2,2,0,0,0,6,6,6,3,3,3 & 6,6,6,4,4,4,2,2,2,0,0,0,5,5,5 & 6,6,6,4,4,4,1,1,1,0,0,0,5,5,5 & 0 \\ \hline
6,6,6,4,4,4,2,2,2,0,0,0,5,5,5 & 0,0,0,6,6,6,4,4,4,2,2,2,0,0,0 & 0,0,0,6,6,6,4,4,4,1,1,1,0,0,0 & 0 \\ \hline
1,1,1,0,0,0,6,6,6,4,4,4,1,1,1 & 3,3,3,2,2,2,0,0,0,6,6,6,3,3,3 & 3,3,3,1,1,1,0,0,0,6,6,6,3,3,3 & 1 \\ \hline
4,4,4,1,1,1,0,0,0,6,6,6,3,3,3 & 6,6,63,3,3,2,2,2,0,0,0,5,5,5 & 6,6,6,3,3,3,1,1,1,0,0,0,5,5,5 & 1 \\ \hline
6,6,6,4,4,4,1,1,1,0,0,0,5,5,5 & 0,0,0,6,6,6,3,3,3,2,2,2,0,0,0 & 0,0,0,6,6,6,3,3,3,1,1,1,0,0,0 & 1 \\ \hline
0,0,0,6,6,6,4,4,4,1,1,1,0,0,0 & 2,2,2,0,0,0,6,6,6,3,3,3,1,1,1 & 1,1,1,0,0,0,6,6,6,3,3,3,1,1,1 & 1 \\ \hline
3,3,3,2,2,2,0,0,0,6,6,6,3,3,3 & 5,5,5,4,4,4,2,2,2,0,0,0,5,5,5 & 5,5,5,4,4,4,1,1,1,0,0,0,5,5,5 & 0 \\ \hline
6,6,6,3,3,3,2,2,2,0,0,0,5,5,5 & 0,0,0,5,5,5,4,4,4,2,2,2,0,0,0 & 0,0,0,5,5,5,4,4,4,1,1,1,0,0,0 & 0 \\ \hline
0,0,0,6,6,6,3,3,3,2,2,2,0,0,0 & 2,2,2,0,0,0,5,5,5,4,4,4,1,1,1 & 1,1,1,0,0,0,5,5,5,4,4,4,1,1,1 & 0 \\ \hline
2,2,2,0,0,0,6,6,6,3,3,3,1,1,1 & 4,4,4,2,2,2,0,0,0,5,5,5,3,3,3 & 4,4,4.1,1,1,0,0,0,5,5,5,3,3,3 & 0 \\ \hline
3,3,3,1,1,1,0,0,0,6,6,6,3,3,3 & 5,5,5,3,3,3,2,2,2,0,0,0,5,5,5 & 5,5,5,3,3,3,(1,1,1,0,0,0,5,5,5 & 1 \\ \hline
6,6,6,3,3,3,1,1,1,0,0,0,5,5,5 & 0,0,0,5,5,5,3,3,3,2,2,2,0,0,0 & 0,0,0,5,5,5,3,3,3,1,1,1,0,0,0 & 1 \\ \hline
0,0,0,6,6,6,3,3,3,1,1,1,0,0,0 & 2,2,2,0,0,0,5,5,5,3,3,3,1,1,1 & 1,1,1,0,0,0,5,5,5,3,3,3,1,1,1 & 1 \\ \hline
1,1,1,0,0,0,6,6,6,3,3,3,1,1,1 & 3,3,3,2,2,2,0,0,0,5,5,5,3,3,3 & 3,3,3,1,1,1,0,0,0,5,5,5,3,3,3 & 1 \\ \hline
5,5,5,4,4,4,2,2,2,0,0,0,5,5,5 & 0,0,0,6,6,6,4,4,4,2,2,2,0,0,0 & 0,0,0,6,6,6,4,4,4,1,1,1,0,0,0 & 0 \\ \hline
0,0,0,5,5,5,4,4,4,2,2,2,0,0,0 & 2,2,2,0,0,0,6,6,6,4,4,4,1,1,1 & 1,1,1,0,0,0,6,6,6,4,4,4,1,1,1 & 0 \\ \hline
2,2,2,0,0,0,5,5,5,4,4,4,1,1,1 & 4,4,4,2,2,2,0,0,0,6,6,6,3,3,3 & 4,4,4,1,1,1,0,0,0,6,6,6,3,3,3 & 0 \\ \hline
4,4,4,2,2,2,0,0,0,5,5,5,3,3,3 & 6,6,6,4,4,4,2,2,2,0,0,0,5,5,5 & 6,6,6,4,4,4,1,1,1,0,0,0,5,5,5 & 0 \\ \hline
5,5,5,3,3,3,2,2,2,0,0,0,5,5,5 & 0,0,0,5,5,5,4,4,4,2,2,2,0,0,0 & 0,0,0,5,5,5,4,4,4,1,1,1,0,0,0 & 0 \\ \hline
0,0,0,5,5,5,3,3,3,2,2,2,0,0,0 & 2,2,2,0,0,0,5,5,5,4,4,4,1,1,1 & 1,1,1,0,0,0,5,5,5,4,4,4,1,1,1 & 0 \\ \hline
2,2,2.0,0,0,5,5,5,3,3,3,1,1,1 & 4,4,4,2,2,2,0,0,0,5,5,5,3,3,3 & 4,4,4,1,1,1,0,0,0,5,5,5,3,3,3 & 0 \\ \hline
3,3,3,2,2,2,0,0,0,5,5,5,3,3,3 & 5,5,5,4,4,4,2,2,2,0,0,0,5,5,5 & 5,5,5,4,4,4,1,1,1,0,0,0,5,5,5 & 0 \\ \hline
5,5,5,4,4,4,1,1,1,0,0,0,5,5,5 & 0,0,0,6,6,6,3,3,3,2,2,2,0,0,0 & 0,0,0,6,6,6,3,3,3,1,1,1,0,0,0 & 1 \\ \hline
0,0,0,5,5,5,4,4,4,1,1,1,0,0,0 & 2,2,2,0,0,0,6,6,6,3,3,3,1,1,1 & 1,1,1,0,0,0,6,6,6,3,3,3,1,1,1 & 1 \\ \hline
1,1,1,0,0,0,5,5,5,4,4,4,1,1,1 & 3,3,3,2,2,2,0,0,0,6,6,6,3,3,3 & 3,3,3,1,1,1,0,0,0,6,6,6,3,3,3 & 1 \\ \hline
4,4,4,1,1,1,0,0,0,5,5,5,3,3,3 & 6,6,6,3,3,3,2,2,2,0,0,0,5,5,5 & 6,6,6,3,3,3,1,1,1,0,0,0,5,5,5 & 1 \\ \hline
5,5,5,3,3,3,1,1,1,0,0,0,5,5,5 & 0,0,0,5,5,5,3,3,3,2,2,2,0,0,0 & 0,0,0,5,5,5,3,3,3,1,1,1,0,0,0 & 1 \\ \hline
0,0,0,5,5,5,3,3,3,1,1,1,0,0,0 & 2,2,2,0,0,0,5,5,5,3,3,3,1,1,1 & 1,1,1,0,0,0,5,5,5,3,3,3,1,1,1 & 1 \\ \hline
1,1,1,0,0,0,5,5,5,3,3,3,1,1,1 & 3,3,3,2,2,2,0,0,0,5,5,5,3,3,3 & 3,3,3,1,1,1,0,0,0,5,5,5,3,3,3 & 1 \\ \hline
3,3,3,1,1,1,0,0,0,5,5,5,3,3,3 & 5,5,5,3,3,3,2,2,2,0,0,0,5,5,5 & 5,5,5,3,3,3,1,1,1,0,0,0,5,5,5 & 1 \\ \hline
\end{tabular}

Below is an example of the description of forming the 13th row in the table 4, for the current state of the automaton D0 (3,3,3,1,1,1,0,0,0,6,6,6,3,3,3). According to the definitions of the mark function of automata A\eqref{GrindEQ__1_}, A\eqref{GrindEQ__2_}, A\eqref{GrindEQ__3_} (Tab. 1), the marks of these states are (0,1,0,1,0,0,0,0,0,0,0,0,0,1,0). According to the row 3 of the description of the feedback unit (Table 2) the input values for the automata of the sample \eqref{GrindEQ__7_}$?$$?$ are determined as: (1,1,1,1,1,1,1,x,x,x,0,0,0,1,1,1). Finally, in accordance with the definitions of the new states of automata A\eqref{GrindEQ__1_} , A(2, A(3) (Tab. 1), the automaton D0 are moving from the current states to the state (5,5,5,3,3,3,2,2,2,0,0,0,5,5,5) for input x=0 and to the state (5,5,5,3,3,3,1,1,1,0,0,0,5,5,5) for input x=1, as reflected in the columns of the new states for corresponding input in the row 13 of the table 4. According with the row 3 of the description of the output unit (Table 3) the mark of current state is determined as 1 for the automata D0.  Likewise are performed the remaining rows of the table 4.

\begin{enumerate}
\item  \textbf{Realization of a delay}
\end{enumerate}

To prove that the automaton D0 realizes the behavior of the automaton D with its initial state 0 is sufficient to show that this automaton is homomorphic to D. For this purpose, it is determined subset of S(D0,0) and S(D0,1) of the set of states S(D0), which marked 0 and 1, respectively, i.e.

M(D0)(s)=0, s in S(D0,0), M(D0)(s)=0, s in S(D0,1). \eqref{GrindEQ__8_}

From the definition of the outputs of the automaton D0 (Tab. 4, the last column) it follows:

S(E0,0)=\{(0,0,0,6,6,6,4,4,4,2,2,2,0,0,0),(2,2,2,0,0,0,6,6,6,4,4,4,1,1,1),(4,4,4,2,2,2,0,0,0,6,6,6,3,3,3)

 ,(6,6,6,4,4,4,2,2,2,0,0,0,5,5,5),(3,3,3,2,2,2,0,0,0,6,6,6,3,3,3),(6,6,6,3,3,3,2,2,2,0,0,0,5,5,5)

 ,(0,0,0,6,6,6,3,3,3,2,2,2,0,0,0),(2,2,2,0,0,0,6,6,6,3,3,3,1,1,1),(5,5,5,4,4,4,2,2,2,0,0,0,5,5,5)

 ,(0,0,0,5,5,5,4,4,4,2,2,2,0,0,0),(2,2,2,0,0,0,5,5,5,4,4,4,1,1,1),(4,4,4,2,2,2,0,0,0,5,5,5,3,3,3)

 ,(5,5,5,3,3,3,2,2,2,0,0,0,5,5,5),(0,0,0,5,5,5,3,3,3,2,2,2,0,0,0),(2,2,2,0,0,0,5,5,5,3,3,3,1,1,1)

 ,(3,3,3,2,2,2,0,0,0,5,5,5,3,3,3)\},

S(E0,1)=\{(1,1,1,0,0,0,6,6,6,4,4,4,1,1,1),(4,4,4,1,1,1,0,0,0,6,6,6,3,3,3),(3,3,3,1,1,1,0,0,0,6,6,6,3,3,3)

 ,(6,6,6,3,3,3,1,1,1,0,0,0,5,5,5) ,(6,6,6,4,4,4,1,1,1,0,0,0,5,5,5),(0,0,0,6,6,6,4,4,4,1,1,1,0,0,0)

 ,(0,0,0,6,6,6,3,3,3,1,1,1,0,0,0),(1,1,1,0,0,0,6,6,6,3,3,3,1,1,1),(5,5,5,4,4,4,1,1,1,0,0,0,5,5,5)

 ,(0,0,0,5,5,5,4,4,4,1,1,1,0,0,0) ,(1,1,1,0,0,0,5,5,5,4,4,4,1,1,1),(4,4,4,1,1,1,0,0,0,5,5,5,3,3,3)

 ,(5,5,5,3,3,3,1,1,1,0,0,0,5,5,5),(0,0,0,5,5,5,3,3,3,1,1,1,0,0,0),(1,1,1,0,0,0,5,5,5,3,3,3,1,1,1)

 ,(3,3,3,1,1,1,0,0,0,5,5,5,3,3,3)\}.

Further, it is defined mapping H of states of the automaton D0 on the set of states of the automaton D as follows:

H( S(D0,0)=0, H(S(D0,1))=1. \eqref{GrindEQ__9_}

By \eqref{GrindEQ__8_} it follows that

M(D)(H(s))=M(D)\eqref{GrindEQ__0_}=0=M(D0)(s), s in S(D0,0), M(D)(H(s))=M(D)\eqref{GrindEQ__0_}=1=M(D0)(s), s in S(D0,1), i.e.

M(D)(H(s))= M(D0)(s), s in S(D0), \eqref{GrindEQ__10_}

where S(D0) is union of the sets S(D0,0) and S(D0,1).

 Consideration of the table 4 indicates validity of the equality:

M(D0)(T(D0)(s,x))=x, s in S(D0), x in \{0,1\}.

Since by \eqref{GrindEQ__9_} H(T(D0)(s,x))=M(D0)(T(D0)(s,x)) and T(D)(s,x)=x, then

T(D)(H(s),x)=H(T(D0)(s,x))   \eqref{GrindEQ__11_}

for all s in S(D0), x in X(D).

It is clear that H(0,0,0,6,6,6,4,4,4,2,2,2,0,0,0)=0, i.e.

H(s0(D0))=s0(D).  \eqref{GrindEQ__12_}

Equations \eqref{GrindEQ__10_} - \eqref{GrindEQ__12_} mean that the delay D is homomorphic image of the automaton D0.

If in the automaton D0, defined as above, will be changed the initial state from (0,0,0,6,6,6,4,4,4,2,2,2,0,0,0)

to state (1,1,1,0,0,0,6,6,6,4,4,4,1,1,1), the resulting automaton D1 will be homomorphic to the delay with the initial state 1.

The completeness of the set \eqref{GrindEQ__6_} of the automata follows from the closedness of composition in the class of Moore automata and completeness of the set of automata, containing the delay.

\begin{enumerate}
\item  \textbf{Arbitrarily large complete sets of automata}
\end{enumerate}

Example of set \eqref{GrindEQ__6_} of the three automata, satisfying sufficient conditions for completeness, can be extended to minimal complete sets with an arbitrary number of automata. Consider the set of automata:

A\eqref{GrindEQ__1_}=(S(1),X\eqref{GrindEQ__1_},Y\eqref{GrindEQ__1_},T\eqref{GrindEQ__1_},M\eqref{GrindEQ__1_}), ..., A(k)=(S(k),X(k),Y(k),T(k),M(k)),  \eqref{GrindEQ__13_},

where k$>$3 and which objects are defined as follows:

S\eqref{GrindEQ__1_}=.. =S(k)=\{0,1,2,3,4, ..., 2$\times$k-1, 2$\times$k, 2$\times$k +1\}, X\eqref{GrindEQ__1_}=...=X(k)=Y\eqref{GrindEQ__1_}=...=Y(k)=\{0,1\},

transition functions T\eqref{GrindEQ__1_}=...=T(k) and mark function M\eqref{GrindEQ__1_},...,M(k) given in the table 5.

Table 5. The transition and mark function of the automata A \eqref{GrindEQ__1_}, A \eqref{GrindEQ__2_}, A \eqref{GrindEQ__3_}, ..., A (k).

\begin{tabular}{|p{0.3in}|p{0.4in}|p{0.4in}|p{0.2in}|p{0.3in}|p{0.3in}|p{0.1in}|p{0.3in}|} \hline
Cur-rent states & \multicolumn{2}{|p{0.7in}|}{New statefor  Input} & \multicolumn{5}{|p{1.2in}|}{Output: the mark\newline function of} \\ \hline
 & 0 & 1 & M\eqref{GrindEQ__1_} & M\eqref{GrindEQ__2_} & M\eqref{GrindEQ__3_} & \dots  & M(k) \\ \hline
0 & 2 & 1 & 0 & 0 & 0 & \dots  & 0 \\ \hline
1 & 2$\times$k+1 & 3 & 1 & 0 & 0 & \dots  & 0 \\ \hline
2 & 4 & 2$\times$k+1 & 0 & 0 & 0 & \dots  & 0 \\ \hline
3 & 2$\times$k+1 & 5 & 0 & 1 & 0 & \dots  & 0 \\ \hline
4 & 6 & 2$\times$k+1 & 0 & 0 & 0 & \dots  & 0 \\ \hline
5 & 2$\times$k+1 & 7 & 0 & 0 & 1 & \dots  & 0 \\ \hline
\dots  & \dots  & \dots  & \dots  & \dots  & \dots  & \dots  & \dots  \\ \hline
2$\times$k-1 & 2$\times$k+1 & 0 & 0 & 0 & 0 & \dots  & 1 \\ \hline
2$\times$k & 0 & 2$\times$k+1 & 0 & 0 & 0 & \dots  & 0 \\ \hline
2$\times$k+1 & 2$\times$k+1 & 2$\times$k+1 & 0 & 0 & 0 & \dots  & 0 \\ \hline
\end{tabular}

The transition functions provide a movement of each of the automaton A(i), i=1,\dots ,k:

- under the influence of the input 0: from the state with even number (starting from the state 0 to state 2$\times$k-2) to the state with the next even number, and finally from the state with number 2$\times$k to state 0;

- under the influence of input 1: from state 0 to state 1, and then from the state with odd number (starting from state 1 to state 2$\times$k-3) $?$$?$to the state with the next odd number, and finally from the state with the number 2$\times$k-1 to state 0;

- in all other cases: to the final state 2$\times$k+1, in which the automaton remains for any input.

The mark function notes all states with mark 0, except for the single state 2$\times$i-1 having the mark 1 for each automaton A(i), i=1, ..., k.

So defined set \eqref{GrindEQ__13_} of automata satisfy the sufficient conditions of completeness for n=k+1, shared states 0 and separating sequences of input signals 000\dots 0 and 111...1 of length n. Constructing, similar to those for the set \eqref{GrindEQ__6_} of three automata, allow to realize the delay D by the  k$\times$(k+2)-tuple of automata from the set \eqref{GrindEQ__13_} of k (k$>$3) automata and matching feedback and outputs units. In this case these constructions do not pass for any proper subset of automata of the set \eqref{GrindEQ__13_}.

\textbf{Conclusion }

\begin{enumerate}
\item \begin{enumerate}
\item \textbf{ }Sufficient condition for completeness is demonstrated by one particular set \eqref{GrindEQ__6_} of automata. The specificity of this set consists from its cardinality, and also that the conditions \eqref{GrindEQ__4_} are not satisfied for the set. The first specificity comes off by example another set \eqref{GrindEQ__13_}. The second specificity requires in general case doubling the number of automata in the more complex construction of the automaton that realizes the delay.

\item  It is easily verified that the set of automata \eqref{GrindEQ__6_} does not satisfy the necessary conditions for completeness given in [4, 5]. Indeed, any pair of automata \eqref{GrindEQ__5_} does not satisfy the requirements of [3] to a pair of automata, forming a complete system. The automata A\eqref{GrindEQ__2_} and A\eqref{GrindEQ__3_} do not satisfy the first condition, analogous to \eqref{GrindEQ__3_}. Any pair of automata A\eqref{GrindEQ__1_} and A\eqref{GrindEQ__2_} or A\eqref{GrindEQ__1_} and A\eqref{GrindEQ__3_} are not satisfy the second condition, analogous to the implication \eqref{GrindEQ__4_}\includegraphics[bb=0mm 0mm 208mm 296mm, width=4.0mm, height=5.4mm, viewport=3mm 4mm 205mm 292mm]{image14}\eqref{GrindEQ__5_}. Therefore, specified in [3] (and in [4]) as necessary conditions for completeness, are wrong and the problem of finding the necessary conditions is actual.

\item  The ideas of the construction of an automaton realized a delay demonstrate how from a set of automata with long cycles of transients can be realized a delay with short cycle of transient. The cycles of moving 02460 (even) and 01350 (odd) of length 4 in automata-components \eqref{GrindEQ__7_} of the automaton D0, that realizes delay D as it showed in the tab. 4, can be interpreted as a detailed elaboration of lengthy transient processes from the shared state 0 to the same state by intermediate states 2,4,6 and 1,3,5 under the influence of input signals, initiating and supporting this transients. Sufficient conditions for completeness of the set \eqref{GrindEQ__6_} allow accelerate these processes in a sample \eqref{GrindEQ__7_} of automata-component of the automaton D0, in which, before ending of the previous transient processes, can be determined by the aggregate outputs of the automata-components and input of the automaton D0:
\end{enumerate}

\item  the input signal (of the automaton D0), earlier initialized previous transients in automata-components, and coinciding with the output signal of the automaton D0 in current time;

\item  the input signals, depending on the input of the automaton D0, for the automata-components, located in shared states, initialized new transient processes of moving on the intermediate states of even or odd cycles before earlier initialized transients in other automata-components are completed;

\item  the input signals, supporting a previously-initialized transients, which propelling automata-components, that are not in the shared state, on the respective cycle of moving.
\end{enumerate}

For example, when the automaton D0 is in the state (3,3,3,1,1,1,0,0,0,6,6,6,3,3,3), see row 13 in Tab. 4, then signal x on its input and the marks (0,1,0,1,0,0,0,0,0,0,0,0,0,1,0) of the states of its automata-component A\eqref{GrindEQ__1_},A\eqref{GrindEQ__2_},A\eqref{GrindEQ__3_}, A\eqref{GrindEQ__4_},A\eqref{GrindEQ__5_},A\eqref{GrindEQ__6_}, A\eqref{GrindEQ__7_},A\eqref{GrindEQ__8_},A\eqref{GrindEQ__9_}, A\eqref{GrindEQ__10_},A\eqref{GrindEQ__11_},A\eqref{GrindEQ__12_}, A\eqref{GrindEQ__13_},A\eqref{GrindEQ__14_},A\eqref{GrindEQ__15_} allow to determine:

\begin{enumerate}
\item  the input signal 1 of the automaton D0, earlier initialized previous transients in automata-components A\eqref{GrindEQ__4_},A\eqref{GrindEQ__5_},A\eqref{GrindEQ__6_}, and coinciding with the output signal of the automaton D0 in current time;

\item  the input signals (x,x,x) for the automata-components A\eqref{GrindEQ__7_},A\eqref{GrindEQ__8_},A\eqref{GrindEQ__9_}, located in shared states (0,0,0), initialized new transient processes of moving on the intermediate states of even, if x=0, or odd, if x=1, cycles before earlier initialized transients in other automata-components are completed;

\item  the input signals (1,1,1),(1,1,1),(0,0,0) and (1,1,1) supporting a previously-initialized transients, which propelling automata-components A\eqref{GrindEQ__1_},A\eqref{GrindEQ__2_},A\eqref{GrindEQ__3_}, A\eqref{GrindEQ__4_},A\eqref{GrindEQ__5_},A\eqref{GrindEQ__6_}, A\eqref{GrindEQ__10_},A\eqref{GrindEQ__11_},A\eqref{GrindEQ__12_} and A\eqref{GrindEQ__13_},A\eqref{GrindEQ__14_},A\eqref{GrindEQ__15_}, that are not in the shared state, on the respective cycle of moving.
\end{enumerate}

In this the position 1 in outputs (0,1,0) of the last triple automata A\eqref{GrindEQ__13_},A\eqref{GrindEQ__14_},A\eqref{GrindEQ__15_} in the sample \eqref{GrindEQ__7_} determine:

\begin{enumerate}
\item  the three automata A\eqref{GrindEQ__4_},A\eqref{GrindEQ__5_},A\eqref{GrindEQ__6_}, in which the presence of 1 at their outputs (1,0,0) determines the output 1 of the automaton D0;

\item  the three automata A\eqref{GrindEQ__7_},A\eqref{GrindEQ__8_},A\eqref{GrindEQ__9_}, which is in the shared states (0,0,0) and which can be initialized new cycles of transitions before earlier initialized transients in other automata-components are completed.
\end{enumerate}

Inputs (1,1,1),(1,1,1),(0,0,0), supporting a previously-initialized transients, which propelling automata-components A\eqref{GrindEQ__1_},A\eqref{GrindEQ__2_},A\eqref{GrindEQ__3_}, A\eqref{GrindEQ__4_},A\eqref{GrindEQ__5_},A\eqref{GrindEQ__6_}, A\eqref{GrindEQ__10_},A\eqref{GrindEQ__11_},A\eqref{GrindEQ__12_} on the respective cycle of moving, are determined by the presence or absence of 1 in their outputs \eqref{GrindEQ__010_},(1,0,0),(0,0,0). Input signals (1,1,1) for automata-components A\eqref{GrindEQ__13_},A\eqref{GrindEQ__14_},A\eqref{GrindEQ__15_} are always the same.

\begin{enumerate}
\item \begin{enumerate}
\item  The proposed procedure of implementation of the delay, using automata with the cycles of length 4 from a complete set of automata \eqref{GrindEQ__6_}, allows to achieve the acceleration for 4 times, using 15=4$\times$(4-1) copies of automata.
\end{enumerate}
\end{enumerate}

A similar procedure for the example of k automata from a complete set \eqref{GrindEQ__13_} with the cycles of length n gives a n-fold acceleration, but it requires n$\times$(n-1) copies of automata to realize a delay. Thus, the price of the acceleration is a quadratic increase of the used components.

\textbf{Acknowledgement}

The author thanks M.A.Spivak for attaching the attention to this problem, and A.A.Letichevsky for your attention to this work.

\textbf{References}

[1] \textit{Kratko M. I.} On the existence of non-recursive bases of finite automata. Algebra i Logika , Vol. 3, No. 2 (Novosibirsk, 1964) pp. 33--44 (In Russian).

[2] \textit{Glushkov V. M}. The abstract theory of automata. Russian Math. Surveys, Vol. 16, No. 5 \eqref{GrindEQ__1961_}, pp. 1--53.

[3] \textit{Glushkov V. M}. Synthesis of digital automata. FTD-MT-64-206, 1965, 467 p.

[4] \textit{Letichevsky A. A.} Criteria for the completeness of a class of Moore automata. Materialy nauchnych seminarov po teoreticheskim i prikladnym voprosam kibernetiki, issue 2, Kiev 1963, pp. 1-39 (in Russian).

[5] \textit{Donis A. A}. Completeness conditions of systems of weakly initial Moore automata. Cybernetics and Systems Analysis, May--June, 1972, Volume 8, Issue 3, pp 387-407.

[6] \textit{Kudryavtsev} \textit{V. B.} On the automata functional systems. Proceedings of the NATO Advanced Study Institute on Structural Theory of Automata, Semigroups and Universal Algebra. Montreal, Quebec, Canada. 7-18 July 2003. NATO Science Series. Series 2: Mathematics, Physics and Chemistry, vol. 207 Springer, 2005.

[7] URL:http://www.encyclopediaofmath.org/index.php?title=Automata,\_algebraic\_theory\_of\&oldid=11671

[8] URL:http://www.encyclopediaofmath.org/index.php?title=Automata,\_composition\_of\&oldid=15462

[9] URL:http://www.encyclopediaofmath.org/index.php?title=Automata,\_complete\_systems\_of\&oldid=12109


\end{document}

